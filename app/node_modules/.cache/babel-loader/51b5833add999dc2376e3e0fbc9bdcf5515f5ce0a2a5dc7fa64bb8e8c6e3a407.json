{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from '../libs/axios.js';\nimport { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { serverContext } from '../App.js';\nexport const useVerify = () => {\n  _s();\n  const [id, setId] = useState('');\n  const [authUser, setAuthUser] = useState('');\n  const [authFullname, setAuthFullName] = useState('');\n  const [admin, setAdmin] = useState(true);\n  const server = useContext(serverContext);\n  const navigate = useNavigate();\n  const verify = async () => {\n    try {\n      const res = await axios.get(`${server}`);\n      if (res.data.verified === true) {\n        if (res.data.user !== 'admin') {\n          setAdmin(false);\n        }\n        setId(res.data.id);\n        setAuthUser(res.data.user);\n        setAuthFullName(res.data.fullname);\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  verify();\n  alert(id);\n  return {\n    id,\n    authUser,\n    authFullname,\n    admin\n  };\n};\n_s(useVerify, \"3KVojvQP+pkV+zpCrtTdWkvYk+E=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["axios","useState","useContext","useNavigate","serverContext","useVerify","_s","id","setId","authUser","setAuthUser","authFullname","setAuthFullName","admin","setAdmin","server","navigate","verify","res","get","data","verified","user","fullname","error","console","log","alert"],"sources":["/data/data/com.termux/files/home/www/proxy-users-mongodb/app/src/hooks/useVerify.js"],"sourcesContent":["import axios from '../libs/axios.js'\nimport { useState, useContext } from 'react'\nimport { useNavigate} from 'react-router-dom'\nimport { serverContext } from '../App.js'\n\nexport const useVerify = () => {\n    const [id, setId] = useState('')\n    const [authUser, setAuthUser] = useState('')\n    const [authFullname, setAuthFullName] = useState('')\n    const [admin, setAdmin] = useState(true)\n\n    const server = useContext(serverContext)\n    const navigate = useNavigate()\n\n    const verify = async () => {\n\ttry {\n\t    const res = await axios.get(`${server}`)\n\t\tif (res.data.verified === true) {\n\t\t    if (res.data.user !== 'admin') {\n\t\t        setAdmin(false)\n\t\t    }\n\t\t    setId(res.data.id)\n\t\t    setAuthUser(res.data.user)\n\t\t    setAuthFullName(res.data.fullname)\n\t\t} else {\n\t\t    navigate('/login')\n\t\t}\n\t} catch (error) {\n\t    console.log(error)\n\t}\n    }\n\n    verify()\n    alert(id)\n\n    return { id, authUser, authFullname, admin }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAO,kBAAkB;AAC7C,SAASC,aAAa,QAAQ,WAAW;AAEzC,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,MAAM,GAAGb,UAAU,CAACE,aAAa,CAAC;EACxC,MAAMY,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,MAAM,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGJ,MAAM,EAAE,CAAC;MAC3C,IAAIG,GAAG,CAACE,IAAI,CAACC,QAAQ,KAAK,IAAI,EAAE;QAC5B,IAAIH,GAAG,CAACE,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;UAC3BR,QAAQ,CAAC,KAAK,CAAC;QACnB;QACAN,KAAK,CAACU,GAAG,CAACE,IAAI,CAACb,EAAE,CAAC;QAClBG,WAAW,CAACQ,GAAG,CAACE,IAAI,CAACE,IAAI,CAAC;QAC1BV,eAAe,CAACM,GAAG,CAACE,IAAI,CAACG,QAAQ,CAAC;MACtC,CAAC,MAAM;QACHP,QAAQ,CAAC,QAAQ,CAAC;MACtB;IACD,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACG,CAAC;EAEDP,MAAM,CAAC,CAAC;EACRU,KAAK,CAACpB,EAAE,CAAC;EAET,OAAO;IAAEA,EAAE;IAAEE,QAAQ;IAAEE,YAAY;IAAEE;EAAM,CAAC;AAChD,CAAC;AAAAP,EAAA,CA/BYD,SAAS;EAAA,QAODF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}