{"ast":null,"code":"import jspdf from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nexport const createPDF = (data, option) => {\n  const getDate = () => {\n    const timestamp = Date.now();\n    const today = new Date(timestamp);\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate(); // prints the day of the month (1-31)\n    let hh = today.getHours(); // prints the hour (0-23)\n    let min = today.getMinutes(); // prints the minute (0-59)\n    let sec = today.getSeconds(); // prints the second (0-59)\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n    if (hh < 10) hh = '0' + hh;\n    if (min < 10) min = '0' + min;\n    if (sec < 10) sec = '0' + sec;\n    return dd + '/' + mm + '/' + yyyy + ' ' + hh + ':' + min + ':' + sec;\n  };\n  const doc = new jspdf({\n    orientation: 'p',\n    unit: 'mm',\n    format: 'letter'\n  });\n  const u = [];\n  let i = 1;\n  let view = '';\n  let la = '';\n  switch (option) {\n    case 't':\n      const all = data.map(d => {\n        u.push([`${i}`, `${d.user}`, `${d.fullname}`, `${d.createdAt}`, `${d.updatedAt}`, `${d.enabled === 1 ? 'Activo' : 'Inactivo'}`]);\n        i += 1;\n      });\n      break;\n    case 'a':\n      const active = data.filter(e => e.enabled === 1);\n      const act = active.map(e => {\n        u.push([`${i}`, `${e.user}`, `${e.fullname}`, `${e.createdAt}`, `${e.updatedAt}`, 'Activo']);\n        i += 1;\n      });\n      view = '(Activos)';\n      break;\n    case 'i':\n      const inaactive = data.filter(e => e.enabled === 0);\n      const inact = inaactive.map(e => {\n        u.push([`${i}`, `${e.user}`, `${e.fullname}`, `${e.createdAt}`, `${e.updatedAt}`, 'Inactivo']);\n        i += 1;\n      });\n      view = '(Inactivos)';\n      break;\n    default:\n  }\n  let b = u;\n  for (let x = 0; x <= 1; x++) {\n    for (let i = 0; i <= Object.keys(u).length - 1; i++) {\n      b = [...b, u[i]];\n    }\n  }\n  doc.setFont('helvetica', 'bold');\n  doc.setFontSize(12);\n  doc.setLineDashPattern([1, 1]);\n  doc.text(\"Listado de usuarios del proxy:\", 14, 10);\n  doc.setFont('helvetica', 'normal');\n  doc.text(view, 77, 10);\n  doc.setFont('helvetica', 'bold');\n  doc.text('F/H:', 150, 10);\n  doc.setFont('helvetica', 'normal');\n  doc.text(getDate(), 160, 10);\n  doc.line(14, 13, 200, 13, 'FD');\n  doc.autoTable({\n    theme: 'plain',\n    margin: {\n      top: 15\n    },\n    styles: {\n      font: 'helvetica'\n    },\n    headStyles: {\n      2: {\n        halign: 'center',\n        fillColor: [0, 255, 0]\n      }\n    },\n    head: [['No.', 'Usuario', 'Nombre y apellidos', 'Creado', 'Modificado', 'Estado']],\n    columnStyles: {\n      3: {\n        halign: 'center',\n        fillColor: [0, 255, 0]\n      }\n    },\n    /*\tcolumns: [\n    \t    {heade:'No.', dataKey:'id'},\n    \t    {header:'Usuario', dataKey:'user'},\n    \t    {header:'Nombre y apellidos', dataKey:'name'},\n    \t    {header:'Creado', dataKey:'created'},\n    \t    {header:'Modificado', dataKey:'updated'},\n    \t    {header:'Estado', dataKey:'state'},\n    \t    ],*/\n    body: u\n  });\n  la = Math.ceil(doc.lastAutoTable.finalY) + 8;\n\n  //alert(la)\n\n  doc.text('Este texto despues de la tabla', 16, `${la}`);\n  doc.save('usuarios.pdf');\n};\nexport default createPDF;\n\n/* NOTES:\n\n    * Table\n    Styling options\n    theme: 'striped'|'grid'|'plain' = 'striped'\n    styles: StyleDef\n    headStyles: StyleDef\n    bodyStyles: StyleDef\n    footStyles: StyleDef\n    alternateRowStyles: StyleDef\n    columnStyles: {&columnDataKey: StyleDef} Note that the columnDataKey is normally the index of the column, but could also be the dataKey of a column if content initialized with the columns property\n    StyleDef:\n    \n    font: 'helvetica'|'times'|'courier' = 'helvetica'\n    fontStyle: 'normal'|'bold'|'italic'|'bolditalic' = 'normal'\n    overflow: 'linebreak'|'ellipsize'|'visible'|'hidden' = 'linebreak'\n    fillColor: Color? = null\n    textColor: Color? = 20\n    cellWidth: 'auto'|'wrap'|number = 'auto'\n    minCellWidth: number? = 10\n    minCellHeight: number = 0\n    halign: 'left'|'center'|'right' = 'left'\n    valign: 'top'|'middle'|'bottom' = 'top'\n    fontSize: number = 10\n    cellPadding: Padding = 10\n    lineColor: Color = 10\n    lineWidth: border = 0 // If 0, no border is drawn\n    \n    * Document\n\n    line(x1,y1,x2,y2, style)\t\t\t\t// Draw a line. Valid styles include: 'S' [default] - stroke, 'F' - fill, and 'DF' (or 'FD') - fill then stroke. \n    rect(x, y, w, h, style) \t\t\t// Add a rectangle at x,y position (style: Valid styles include: 'S' [default] - stroke, 'F' - fill, and 'DF' (or 'FD') - fill then stroke.)\n    roundedRect(x, y, w, h, rx, ry, style)\t// Add a rounded rectangle at x,y. Rounded values at rx, ry\n    triangle(x1, y1, x2, y2, x3, y3, style)\t// Adds a triangle to PDF.\n    setTextColor(ch1, ch2, ch3, ch4)\t\t// Sets the text color for upcoming elements in CMYK format\n    setCharSpace(charSpace)\t\t\t// Set global value of CharSpace.\n    setCreationDate(date)\n    setFontSize(size)\t\t\t\t// Sets font size for upcoming text elements\n    setFontStyle(style)\t\t\t\t// Switches font style or variant for upcoming text elements, while keeping the font face or family same\n    addPage()\t\t\t\t\t// AddsetPage(page)\n    movePage(targetPage, beforePage) \n    setPage(page)\t\t\t\t// Sets focus to (page)\n    setLineWidth(width) \t\t\t// Sets line width for upcoming lines.\n    setLineHeightFactor(value)\t\t\t// Sets the LineHeightFactor of proportion. Default: 1.15.\n    setFillColor(ch1, ch2, ch3, ch4)\t\t// Sets the fill color for upcoming elements. Depending on the number of arguments given, Gray, RGB, or CMYK color space is implied.\n    setDrawColor(ch1, ch2, ch3, ch4\n    \n*/","map":{"version":3,"names":["jspdf","autoTable","createPDF","data","option","getDate","timestamp","Date","now","today","yyyy","getFullYear","mm","getMonth","dd","hh","getHours","min","getMinutes","sec","getSeconds","doc","orientation","unit","format","u","i","view","la","all","map","d","push","user","fullname","createdAt","updatedAt","enabled","active","filter","e","act","inaactive","inact","b","x","Object","keys","length","setFont","setFontSize","setLineDashPattern","text","line","theme","margin","top","styles","font","headStyles","halign","fillColor","head","columnStyles","body","Math","ceil","lastAutoTable","finalY","save"],"sources":["/data/data/com.termux/files/home/www/proxy-users/app/src/libs/usersPDF.js"],"sourcesContent":["import jspdf from \"jspdf\"\nimport autoTable from 'jspdf-autotable'\n\nexport const createPDF = (data, option) => {\n\nconst getDate = () =>{\n    const timestamp = Date.now()\n    const today = new Date(timestamp)\n    const yyyy = today.getFullYear()\n    let mm = today.getMonth() + 1\t// Months start at 0!\n    let dd = today.getDate() \t\t// prints the day of the month (1-31)\n    let hh = today.getHours() \t\t// prints the hour (0-23)\n    let min = today.getMinutes() \t// prints the minute (0-59)\n    let sec = today.getSeconds() \t// prints the second (0-59)\n    if (dd < 10) dd = '0' + dd\n    if (mm < 10) mm = '0' + mm\n    if (hh < 10) hh = '0' + hh\n    if (min < 10) min = '0' + min                                                 \n    if (sec < 10) sec = '0' + sec\n\n    return dd + '/' + mm + '/' + yyyy + ' ' + hh + ':' + min + ':' + sec\n}\n    const doc = new jspdf({\n\torientation: 'p',\n\tunit: 'mm',\n\tformat: 'letter'\n    })\n\n    const u = [ ]\n    let i = 1\n    let view = ''\n    let la = ''\n    \n    switch(option){\n\tcase 't':\n\t    const all = data.map(d =>{\n\t\tu.push([`${i}`, `${d.user}`, `${d.fullname}`, `${d.createdAt}`, `${d.updatedAt}`, `${d.enabled === 1 ? 'Activo' : 'Inactivo'}`],)\n\t        i += 1\n\t    })\n    \t    break\n\tcase 'a':\n\t    const active = data.filter(e => e.enabled === 1)\n\t    const act = active.map(e =>{\n\t\tu.push([`${i}`, `${e.user}`, `${e.fullname}`, `${e.createdAt}`, `${e.updatedAt}`,  'Activo'],)\n\t        i += 1\n\t    })\n\t    view = '(Activos)'\n\t    break\n\tcase 'i':\n\t    const inaactive = data.filter(e => e.enabled === 0)\n\t    const inact = inaactive.map(e =>{\n\t\tu.push([`${i}`, `${e.user}`, `${e.fullname}`, `${e.createdAt}`, `${e.updatedAt}`,  'Inactivo'],)\n\t        i += 1\n\t    })\n\t    view = '(Inactivos)'\n\t    break\n\tdefault:\n    }\n\n    let b = u\n    for(let x=0; x<=1; x++){\n\tfor(let i=0; i<=Object.keys(u).length - 1; i++){\n\t    b = [...b, u[i]]   \n\t}\n    }\n\n    doc.setFont('helvetica','bold')\n    doc.setFontSize(12)\n    doc.setLineDashPattern([1,1])\n    doc.text(\"Listado de usuarios del proxy:\", 14, 10)\n    doc.setFont('helvetica','normal')\n    doc.text(view, 77,10)\n    doc.setFont('helvetica','bold')\n    doc.text('F/H:', 150,10)\n    doc.setFont('helvetica','normal')\n    doc.text(getDate(), 160,10)\n    doc.line(14,13,200,13,'FD')\n\n    doc.autoTable({\n        theme: 'plain',\n        margin: {top: 15},\n        styles: {\n    \t    font: 'helvetica'\n    \t    },\n    \theadStyles: { 2: { halign: 'center', fillColor: [0, 255, 0] }},\n\t\thead: [['No.','Usuario','Nombre y apellidos','Creado','Modificado','Estado',]],\n    \tcolumnStyles: { 3: { halign: 'center', fillColor: [0, 255, 0] }},\n\n/*\tcolumns: [\n\t    {heade:'No.', dataKey:'id'},\n\t    {header:'Usuario', dataKey:'user'},\n\t    {header:'Nombre y apellidos', dataKey:'name'},\n\t    {header:'Creado', dataKey:'created'},\n\t    {header:'Modificado', dataKey:'updated'},\n\t    {header:'Estado', dataKey:'state'},\n\t    ],*/\n\t\tbody: u,\n    })\n\n    la = Math.ceil(doc.lastAutoTable.finalY) + 8\n\n    //alert(la)\n\n\n    doc.text('Este texto despues de la tabla',16,`${la}`)\n\n\n\n    doc.save('usuarios.pdf')\n\n\n}\n\nexport default createPDF\n\n/* NOTES:\n\n    * Table\n    Styling options\n    theme: 'striped'|'grid'|'plain' = 'striped'\n    styles: StyleDef\n    headStyles: StyleDef\n    bodyStyles: StyleDef\n    footStyles: StyleDef\n    alternateRowStyles: StyleDef\n    columnStyles: {&columnDataKey: StyleDef} Note that the columnDataKey is normally the index of the column, but could also be the dataKey of a column if content initialized with the columns property\n    StyleDef:\n    \n    font: 'helvetica'|'times'|'courier' = 'helvetica'\n    fontStyle: 'normal'|'bold'|'italic'|'bolditalic' = 'normal'\n    overflow: 'linebreak'|'ellipsize'|'visible'|'hidden' = 'linebreak'\n    fillColor: Color? = null\n    textColor: Color? = 20\n    cellWidth: 'auto'|'wrap'|number = 'auto'\n    minCellWidth: number? = 10\n    minCellHeight: number = 0\n    halign: 'left'|'center'|'right' = 'left'\n    valign: 'top'|'middle'|'bottom' = 'top'\n    fontSize: number = 10\n    cellPadding: Padding = 10\n    lineColor: Color = 10\n    lineWidth: border = 0 // If 0, no border is drawn\n    \n    * Document\n\n    line(x1,y1,x2,y2, style)\t\t\t\t// Draw a line. Valid styles include: 'S' [default] - stroke, 'F' - fill, and 'DF' (or 'FD') - fill then stroke. \n    rect(x, y, w, h, style) \t\t\t// Add a rectangle at x,y position (style: Valid styles include: 'S' [default] - stroke, 'F' - fill, and 'DF' (or 'FD') - fill then stroke.)\n    roundedRect(x, y, w, h, rx, ry, style)\t// Add a rounded rectangle at x,y. Rounded values at rx, ry\n    triangle(x1, y1, x2, y2, x3, y3, style)\t// Adds a triangle to PDF.\n    setTextColor(ch1, ch2, ch3, ch4)\t\t// Sets the text color for upcoming elements in CMYK format\n    setCharSpace(charSpace)\t\t\t// Set global value of CharSpace.\n    setCreationDate(date)\n    setFontSize(size)\t\t\t\t// Sets font size for upcoming text elements\n    setFontStyle(style)\t\t\t\t// Switches font style or variant for upcoming text elements, while keeping the font face or family same\n    addPage()\t\t\t\t\t// AddsetPage(page)\n    movePage(targetPage, beforePage) \n    setPage(page)\t\t\t\t// Sets focus to (page)\n    setLineWidth(width) \t\t\t// Sets line width for upcoming lines.\n    setLineHeightFactor(value)\t\t\t// Sets the LineHeightFactor of proportion. Default: 1.15.\n    setFillColor(ch1, ch2, ch3, ch4)\t\t// Sets the fill color for upcoming elements. Depending on the number of arguments given, Gray, RGB, or CMYK color space is implied.\n    setDrawColor(ch1, ch2, ch3, ch4\n    \n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}