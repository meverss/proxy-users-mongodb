{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport serverContext from '../App.js';\nexport const useVerify = async () => {\n  _s();\n  const [id, setId] = useState();\n  const [user, setUser] = useState();\n  const [fullname, setFullName] = useState();\n  const [admin, setAdmin] = useState(true);\n  const server = useContext(serverContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    try {\n      const res = axios.get(`${server}`);\n      if (res.data.verified === true) {\n        if (res.data.user !== 'admin') {\n          setAdmin(false);\n        }\n        setId(res.data.id);\n        setUser(res.data.user);\n        setFullName(res.data.fullname);\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    getData();\n  }, []);\n  const getData = () => {\n    return {\n      id,\n      actUser: user,\n      actFullname: fullname,\n      admin\n    };\n  };\n};\n_s(useVerify, \"/gA/z0djZM3+olK7PkCMoJrpLjo=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["axios","useState","useEffect","useContext","useNavigate","serverContext","useVerify","_s","id","setId","user","setUser","fullname","setFullName","admin","setAdmin","server","navigate","res","get","data","verified","error","console","log","getData","actUser","actFullname"],"sources":["/data/data/com.termux/files/home/www/proxy-users-mongodb/app/src/hooks/useVerify.js"],"sourcesContent":["import axios from 'axios'\nimport { useState, useEffect, useContext } from 'react'\nimport { useNavigate} from 'react-router-dom'\nimport serverContext from '../App.js'\n\nexport const useVerify = async () => {\n\tconst [id, setId] = useState()\n\tconst [user, setUser] = useState()\n\tconst [fullname, setFullName] = useState()\n\tconst [admin, setAdmin] = useState(true)\n\n\tconst server = useContext(serverContext)\n\tconst navigate = useNavigate()\n\t\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tconst res = axios.get(`${server}`)\n\t\t\tif (res.data.verified === true) {\n\t\t    \tif (res.data.user !== 'admin') {\n\t\t            setAdmin(false)\n\t\t    \t}\n\t\t        setId(res.data.id)\n\t\t        setUser(res.data.user)\n\t\t        setFullName(res.data.fullname)\n\t\t        \t        \t\n\t\t    } else {\n\t\t    \tnavigate('/login')\n\t\t    }\n\t\t } catch (error) {\n\t\t \tconsole.log(error)\n\t\t }\n\n\t\t getData()\n\t\t \n\t},[])\n\n\tconst getData = ()=>{\n\t\treturn {\n\t\tid,\n\t\tactUser: user,\n\t\tactFullname: fullname,\n\t\tadmin\n\t\t}\n\t}\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAO,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,WAAW;AAErC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EACpC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC9B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,MAAM,GAAGb,UAAU,CAACE,aAAa,CAAC;EACxC,MAAMY,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACf,IAAI;MACH,MAAMgB,GAAG,GAAGlB,KAAK,CAACmB,GAAG,CAAC,GAAGH,MAAM,EAAE,CAAC;MAClC,IAAIE,GAAG,CAACE,IAAI,CAACC,QAAQ,KAAK,IAAI,EAAE;QAC5B,IAAIH,GAAG,CAACE,IAAI,CAACV,IAAI,KAAK,OAAO,EAAE;UACxBK,QAAQ,CAAC,KAAK,CAAC;QACtB;QACGN,KAAK,CAACS,GAAG,CAACE,IAAI,CAACZ,EAAE,CAAC;QAClBG,OAAO,CAACO,GAAG,CAACE,IAAI,CAACV,IAAI,CAAC;QACtBG,WAAW,CAACK,GAAG,CAACE,IAAI,CAACR,QAAQ,CAAC;MAElC,CAAC,MAAM;QACNK,QAAQ,CAAC,QAAQ,CAAC;MACnB;IACH,CAAC,CAAC,OAAOK,KAAK,EAAE;MACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACnB;IAEAG,OAAO,CAAC,CAAC;EAEX,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,OAAO,GAAGA,CAAA,KAAI;IACnB,OAAO;MACPjB,EAAE;MACFkB,OAAO,EAAEhB,IAAI;MACbiB,WAAW,EAAEf,QAAQ;MACrBE;IACA,CAAC;EACF,CAAC;AACF,CAAC;AAAAP,EAAA,CAvCYD,SAAS;EAAA,QAOJF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}